#!/bin/bash

# LABPAGES
# Maintainer: @jubianchi
# App Version: 0.1

### BEGIN INIT INFO
# Provides:          labpages
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: LabPages web hook
# Description:       LabPages web hook
### END INIT INFO

EXEC=$(which rackup)
APP_ROOT="/home/git/labpages"
APP_LOG="/var/log/labpages.log"
APP_USER="git"
PID_PATH="$APP_ROOT/labpages.pid"
DAEMON_OPTS="-p 12000 -P $PID_PATH"
NAME="labpages"
DESC="LabPages web hook"

check_pid(){
  if [ -f $PID_PATH ]; then
    PID=`cat $PID_PATH`

    if [ -z $PID ]; then
      PID=0
      STATUS=0
    else
      STATUS=`ps aux | grep $PID | grep -v grep | wc -l`
    fi
  else
    STATUS=0
    PID=0
  fi  
}

execute() {
  sudo -u $APP_USER -H bash -l -c "$1"
}

start() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    # Program is running, exit with error code 1.
    echo "Error! $DESC $NAME is currently running!"
    exit 1
  else
    if [ `whoami` = root ]; then
      execute "cd $APP_ROOT && $EXEC $DAEMON_OPTS > $APP_LOG 2>&1" &

      while [ "$PID" -eq 0 ]; do echo -n "."; sleep 1; check_pid; done

      echo -e "\n$DESC started ($PID)"
    fi
  fi
}

stop() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    ## Program is running, stop it.
    kill -SIGINT $PID
    rm -f "$PID_PATH" > /dev/null
    echo "$DESC stopped"
  else
    ## Program is not running, exit with error.
    echo "Error! $DESC not started!"
    exit 1
  fi
}

restart() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "Restarting $DESC..."
    kill -USR2 $PID
    echo "$DESC restarted."
  else
    echo "Error, $NAME not running!"
    exit 1
  fi
}

status() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "$DESC with PID $PID is running."
  else
    echo "$DESC is not running."
    exit 1
  fi
}

## Check to see if we are running as root first.
## Found at http://www.cyberciti.biz/tips/shell-root-user-check-script.html
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root"
    exit 1
fi

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  reload|force-reload)
        echo -n "Reloading $NAME configuration: "
        kill -HUP `cat $PID_PATH`
        echo "done."
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: sudo service labpages {start|stop|restart|reload|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
